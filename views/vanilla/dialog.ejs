<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
		<style>

      /************************************************************************
       * TYPE2 STYLE                                                          *
       ************************************************************************/
      button.btn2 { display: inline-block; padding: 7px 12px; font-size: 14px; border: 0; background-color: #fff; outline: none; color: #000; box-shadow: rgba(0, 0, 0, 0.117647) 0px 1px 6px, rgba(0, 0, 0, 0.117647) 0px 1px 4px; border-radius: 2px; }

      button.btn2:hover { border-radius: 2px; background-color: rgba(0,0,0,0.07); transition: all 450ms cubic-bezier(0.23, 1, 0.32, 1) 0ms; }
      button.btn2:active { box-shadow: rgba(0, 0, 0, 0.156863) 0px 3px 10px, rgba(0, 0, 0, 0.227451) 0px 3px 10px; }

      button.btn2.btn2-primary { color: #fff; background-color: rgb(0, 188, 212); }
      button.btn2.btn2-primary:hover { background-color: rgba(0, 188, 212, 0.4); }

      /************************************************************************
       * DIALGO STYLE                                                         *
       ************************************************************************/
      .dialog {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        border: 1px solid green;
        background-color: rgba(0,0,0,0.5);
      }


      .dialog .box {
        border: 1px solid green;
        border-radius: 2px;
        margin: auto;
        width: 50%;
        height: 250px;
        background-color: #fff;
      }
      .dialog.show {
        display: block;
      }
      .dialog.hide {
        display: none;
      }

      .dialog.deactive {
        opacity: 0;
        transition: all 500ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
      }
      .dialog.deactive .box {
        opacity: 0;
        margin-top: 0;
        transition: all 500ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
      }
      .dialog.active {
        opacity: 1;
        transition: all 500ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
      }
      .dialog.active .box {
        opacity: 1;
        margin-top: 13%;
        transition: all 500ms cubic-bezier(0.23, 1, 0.32, 1) 0ms;
      }

		</style>
  </head>
  <body>
    <% include ../base/header %> 
    <% include ../base/nav %> 
    <section class="main">
      <h1>Dialog</h1>
      <h3>- Primary Type</h3>
      <div>
        <button id="dbutton" type="button" class="btn2 btn2-primary">Dialog</button>
      </div>
      <div id="dialog" class="dialog hide deactive">
        <div class="box">
        </div>
      </div>
    </section>
    <% include ../base/footer %> 
    <script>

      function Dialog(button, dialog) {
        this.init(button, dialog);
      }

      Dialog.prototype = {
        init: function(button, dialog) {
          var box = dialog.querySelector(".box");

          button.addEventListener('click', function(evt) {
            var className = dialog.className;
            removeClass(dialog,'hide');
            addClass(dialog,'show');
            setTimeout(function() {
              removeClass(dialog,'deactive');
              addClass(dialog,'active');
            },0);
          });

          box.addEventListener('click', function(evt) {
            evt.stopPropagation();
            evt.preventDefault();
          });

          box.addEventListener('transitionend', function() {
            if (!dialog.className.match(/ active/)) {
              removeClass(dialog, 'show');
              addClass(dialog, 'hide');
            }
          });

          dialog.addEventListener('click', function() {
            var className = dialog.className;
            removeClass(dialog, 'active');
            addClass(dialog,'deactive');
          });
        },
      }
      var dialog = new Dialog(
          document.getElementById("dbutton"),
          document.getElementById("dialog")
      );

      function addClass(target, addClass) {
        var className = target.className;
        if (!new RegExp(addClass, 'g').exec(className)) {
          className += " "+addClass;
          target.className = className;
        }
      }
      function removeClass(target, removeClass) {
        var className = target.className;
        if (new RegExp(removeClass, 'g').exec(className)) {
          var regex = new RegExp(' '+removeClass, 'g');
          className = className.replace(regex, '');
          target.className = className;
        }
      }

    </script>
  </body>
</html>
